// <auto-generated />
using System;
using Bergle.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Src.Migrations
{
    [DbContext(typeof(BergleContext))]
    partial class BergleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AutorLivro", b =>
                {
                    b.Property<int>("AutoresId")
                        .HasColumnType("integer")
                        .HasColumnName("autores_id");

                    b.Property<int>("LivrosId")
                        .HasColumnType("integer")
                        .HasColumnName("livros_id");

                    b.HasKey("AutoresId", "LivrosId")
                        .HasName("pk_autor_livro");

                    b.HasIndex("LivrosId")
                        .HasDatabaseName("ix_autor_livro_livros_id");

                    b.ToTable("autor_livro");
                });

            modelBuilder.Entity("Bergle.Domain.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_autores");

                    b.ToTable("autores");
                });

            modelBuilder.Entity("Bergle.Domain.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_categorias");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("Bergle.Domain.Leitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_leitores");

                    b.ToTable("leitores");
                });

            modelBuilder.Entity("Bergle.Domain.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataDePublicacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_de_publicacao");

                    b.Property<string>("Titulo")
                        .HasColumnType("text")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("pk_livros");

                    b.ToTable("livros");
                });

            modelBuilder.Entity("Bergle.Domain.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte>("Avaliacao")
                        .HasColumnType("smallint")
                        .HasColumnName("avaliacao");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<int?>("LeitorId")
                        .HasColumnType("integer")
                        .HasColumnName("leitor_id");

                    b.Property<int?>("LivroId")
                        .HasColumnType("integer")
                        .HasColumnName("livro_id");

                    b.HasKey("Id")
                        .HasName("pk_reviews");

                    b.HasIndex("LeitorId")
                        .HasDatabaseName("ix_reviews_leitor_id");

                    b.HasIndex("LivroId")
                        .HasDatabaseName("ix_reviews_livro_id");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("CategoriaLivro", b =>
                {
                    b.Property<int>("CategoriasId")
                        .HasColumnType("integer")
                        .HasColumnName("categorias_id");

                    b.Property<int>("LivrosId")
                        .HasColumnType("integer")
                        .HasColumnName("livros_id");

                    b.HasKey("CategoriasId", "LivrosId")
                        .HasName("pk_categoria_livro");

                    b.HasIndex("LivrosId")
                        .HasDatabaseName("ix_categoria_livro_livros_id");

                    b.ToTable("categoria_livro");
                });

            modelBuilder.Entity("LeitorLivro", b =>
                {
                    b.Property<int>("LeitoresId")
                        .HasColumnType("integer")
                        .HasColumnName("leitores_id");

                    b.Property<int>("LivrosId")
                        .HasColumnType("integer")
                        .HasColumnName("livros_id");

                    b.HasKey("LeitoresId", "LivrosId")
                        .HasName("pk_leitor_livro");

                    b.HasIndex("LivrosId")
                        .HasDatabaseName("ix_leitor_livro_livros_id");

                    b.ToTable("leitor_livro");
                });

            modelBuilder.Entity("AutorLivro", b =>
                {
                    b.HasOne("Bergle.Domain.Autor", null)
                        .WithMany()
                        .HasForeignKey("AutoresId")
                        .HasConstraintName("fk_autor_livro_autores_autores_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bergle.Domain.Livro", null)
                        .WithMany()
                        .HasForeignKey("LivrosId")
                        .HasConstraintName("fk_autor_livro_livros_livros_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bergle.Domain.Review", b =>
                {
                    b.HasOne("Bergle.Domain.Leitor", "Leitor")
                        .WithMany()
                        .HasForeignKey("LeitorId")
                        .HasConstraintName("fk_reviews_leitores_leitor_id");

                    b.HasOne("Bergle.Domain.Livro", null)
                        .WithMany("Reviews")
                        .HasForeignKey("LivroId")
                        .HasConstraintName("fk_reviews_livros_livro_id");

                    b.Navigation("Leitor");
                });

            modelBuilder.Entity("CategoriaLivro", b =>
                {
                    b.HasOne("Bergle.Domain.Categoria", null)
                        .WithMany()
                        .HasForeignKey("CategoriasId")
                        .HasConstraintName("fk_categoria_livro_categorias_categorias_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bergle.Domain.Livro", null)
                        .WithMany()
                        .HasForeignKey("LivrosId")
                        .HasConstraintName("fk_categoria_livro_livros_livros_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeitorLivro", b =>
                {
                    b.HasOne("Bergle.Domain.Leitor", null)
                        .WithMany()
                        .HasForeignKey("LeitoresId")
                        .HasConstraintName("fk_leitor_livro_leitores_leitores_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bergle.Domain.Livro", null)
                        .WithMany()
                        .HasForeignKey("LivrosId")
                        .HasConstraintName("fk_leitor_livro_livros_livros_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bergle.Domain.Livro", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
